{"version":3,"sources":["logo.svg","features/counter/counterSlice.js","features/counter/BreadSlice.js","features/counter/CheeseSlice.js","features/counter/MilkSlice.js","features/counter/SoupSlice.js","features/counter/Item.jsx","features/counter/Counter.js","Cart.jsx","Checkout.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Slice","createSlice","name","initialState","value","reducers","addButter","state","removeButter","actions","BreadSlice","addBread","removeBread","CheeseSilce","addCheese","removeCheese","MilkSilce","addMilk","removeMilk","SoupSlice","addSoup","removeSoup","Item","funct","image","text","add","remove","title","price","class","src","onClick","Counter","butterCount","useSelector","Butter","breadCount","Bread","cheeseCount","Cheese","soupCount","Soup","MilkCount","Milk","dispatch","useDispatch","to","Cart","imgg","item","itemCount","offer","Checkout","butter","gift","App","path","store","configureStore","reducer","ButterReducer","BreadReducer","SoupReducer","CheeseReducer","MilkReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3c7dc17.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\n\n\n\n\n\n\n\n\n\n\nexport const Slice=createSlice({\n  name:\"butter\",\n  initialState:{\n    value:0\n  },\n  reducers:{\n    addButter:(state)=>{\n      if(state.value===0 || state.value>0){\n      state.value+=1}\n      else state.value=0\n    },\n    removeButter:(state)=>{\n        if(state.value>0){\n      state.value-=1}\n        else state.value=0\n    }\n  }\n}\n\n)\n\nexport const { addButter, removeButter } = Slice.actions\nexport default Slice.reducer\n\n\n\n\n\n\n\n\n\n\n{/* export const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;*/}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const BreadSlice=createSlice(\r\n\r\n{\r\n  name:\"bread\",\r\n  initialState:{\r\n    value:0\r\n  },\r\n  reducers:{\r\n    addBread:(state)=>{\r\n      if(state.value>0 || state.value===0){\r\n    state.value+=1}\r\n      else state.value=0\r\n    },\r\n    removeBread:(state)=>{\r\n      if(state.value>0){\r\n    state.value-=1}\r\n      else state.value=0\r\n    }\r\n  }\r\n}\r\n)\r\n\r\nexport const { addBread ,removeBread} = BreadSlice.actions\r\nexport  default BreadSlice.reducer\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const CheeseSilce=createSlice(\r\n\r\n{\r\n  name:\"bread\",\r\n  initialState:{\r\n    value:0\r\n  },\r\n  reducers:{\r\n    addCheese:(state)=>{\r\n      if(state.value>0 || state.value===0){\r\n    state.value+=2}\r\n      else state.value=0\r\n    },\r\n    removeCheese:(state)=>{\r\n      if(state.value>0){\r\n    state.value-=1}\r\n      else state.value=0\r\n    }\r\n  }\r\n}\r\n)\r\n\r\nexport const { addCheese ,removeCheese} = CheeseSilce.actions\r\nexport  default CheeseSilce.reducer\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const MilkSilce=createSlice(\r\n\r\n{\r\n  name:\"milk\",\r\n  initialState:{\r\n    value:0\r\n  },\r\n  reducers:{\r\n    addMilk:(state)=>{\r\n      if(state.value===0 || state.value>0){\r\n      state.value+=1}\r\n      else state.value=0\r\n    },\r\n    removeMilk:(state)=>{\r\n      if(state.value>0){\r\n    state.value-=1}\r\n      else state.value=0\r\n    }\r\n  }\r\n}\r\n)\r\n\r\nexport const { addMilk ,removeMilk} = MilkSilce.actions\r\nexport  default MilkSilce.reducer\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const SoupSlice=createSlice(\r\n\r\n{\r\n  name:\"bread\",\r\n  initialState:{\r\n    value:0\r\n  },\r\n  reducers:{\r\n    addSoup:(state)=>{\r\n      if(state.value>0 || state.value===0){\r\n    state.value+=1}\r\n      else state.value=0\r\n    },\r\n    removeSoup:(state)=>{\r\n      if(state.value>0){\r\n    state.value-=1}\r\n      else state.value=0\r\n    }\r\n  }\r\n}\r\n)\r\n\r\nexport const { addSoup ,removeSoup} = SoupSlice.actions\r\nexport  default SoupSlice.reducer\r\n","import React from 'react'\r\n\r\nfunction Item({funct,image,text ,add ,remove,title,price}) {\r\n    return (\r\n\r\n        <div class=\"shadow-2xl hover:shadow-inner\t p-2 h-72 m-10 text-center  content-between bg-white rounded-2xl\">\r\n<div>\r\n      <img src={image} class=\"w-64 h-32 m-auto\"/>\r\n      </div>\r\n      <div class=\"mt-8 \">\r\n\r\n      <p class=\"font-bold text-2xl\">{title}</p></div>\r\n        <p class=\"text-xl text-blue-400\">₹{price}</p>\r\n<div>\r\n      <button  class=\"bg-purple-400 hover:bg-green-300 text-white w-18 rounded-lg focus:outline-none shadow-lg\" onClick={()=>{funct(add())}}><span class=\"m-3 text-lg\">add</span></button>\r\n    <span class=\"text-blue-500 font-bold text-lg m-5\">  {text}</span>\r\n      <button  class=\"hover:bg-red-400 border-0 hover:text-white w-18\ttext-white bg-purple-400 rounded-lg border-red-400\t  focus:outline-none shadow-lg\r\n      \"onClick={()=>{\r\n\r\n\r\n        funct(remove())\r\n\r\n      }}><span class=\"m-3 text-lg\">remove</span></button>\r\n\r\n      </div>\r\n      </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\n\nimport {\n  addButter,\n  removeButter,\n\n\n\n\n} from \"./counterSlice\";\nimport {\n\n\naddBread ,removeBread\n\n\n} from \"./BreadSlice\";\nimport {\n\n\naddCheese ,removeCheese\n\n\n} from \"./CheeseSlice\";\n\n\nimport {\n\n\naddMilk ,removeMilk\n\n\n} from \"./MilkSlice\";\nimport {\n\n\naddSoup ,removeSoup\n\n\n} from \"./SoupSlice\";\n\nimport Item from \"./Item\"\nimport {\n\n  Link\n} from \"react-router-dom\";\n\nexport function Counter() {\n  const butterCount = useSelector(((state) => state.Butter.value))\n  const breadCount = useSelector(((state) => state.Bread.value))\n  const cheeseCount = useSelector(((state) => state.Cheese.value))\n  const soupCount = useSelector(((state) => state.Soup.value))\n    const MilkCount = useSelector(((state) => state.Milk.value))\n\n\n\n\n\n  //const breadCount = useSelector(((state) => state.counter.value))\n\n  const dispatch = useDispatch();\n\n\n  return (\n<>\n <Link to=\"/checkout\" class=\"justify-end\">\n <span class=\"flex justify-center sticky top-0 bg-white\">\n <ShoppingCartOutlinedIcon class=\"w-16  \"/><p class=\"bg-red-500 text-white h-8 rounded-lg p-1 \">{MilkCount+soupCount+breadCount+butterCount+cheeseCount}</p>\n </span>\n</Link>\n\n\n    <div class=\"flex-1 md:flex md:justify-center\tcontent-center md:pt-32 bg-purple-100\tflex-wrap \">\n  <Item funct={dispatch} image=\"../../../assets/butter.png\"  text={butterCount} title=\"Butter\" add={addButter} remove={removeButter} price={120}/>\n    <Item funct={dispatch} image=\"../../../assets/bread.png\"  text={breadCount} title=\"Bread\" add={addBread} remove={removeBread} price={110}/>\n      <Item funct={dispatch} image=\"../../../assets/Cheddar.png\"  text={cheeseCount} title=\"Cheese\" add={addCheese} remove={removeCheese} price={90}/>\n        <Item funct={dispatch} image=\"../../../assets/soup.png\"  text={soupCount} title=\"Soup\"add={addSoup} remove={removeSoup} price={60}/>\n          <Item funct={dispatch} image=\"https://img.webmd.com/dtmcms/live/webmd/consumer_assets/site_images/article_thumbnails/reference_guide/living_with_a_milk_allergy_ref_guide/650x350_living_with_a_milk_allergy_ref_guide.jpg?resize=*:350px\"  price ={50} text={MilkCount} title=\"MilK\"add={addMilk} remove={removeMilk}/>\n\n  </div>\n</>);\n}\n","import React from 'react'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\r\nfunction Cart({imgg,item,itemCount,price,add,remove,offer}) {\r\n  const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div class=\"p-4 md:p-8 bg-white m-12 shadow-lg flex flex-wrap items-center\tjustify-around\t text-center\">\r\n<img src={imgg} class=\"w-36\"/>\r\n<p class=\"font-bold text-lg m-16 mr-16\">{item}</p>\r\n<div class=\"flex items-center\">\r\n<RemoveCircleOutlineOutlinedIcon onClick={()=>{dispatch(remove())}}/>\r\n<p class=\"font-bold text-lg m-8 md:m-16 md:mr:8 mr-16 text-blue-500\">{itemCount}</p>\r\n<AddCircleOutlineIcon  onClick={()=>{dispatch(add())}}/>\r\n</div>\r\n\r\n<p class=\"text-center  font-bold text-blue-800\">₹{itemCount*price}</p>\r\n<p class=\"text-red-500\">{offer}</p>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Cart from \"./Cart\"\r\nimport {\r\n  addButter,\r\n  removeButter,\r\n\r\n\r\n\r\n\r\n} from \"./features/counter/counterSlice\";\r\nimport { addBread ,removeBread} from \"./features/counter/BreadSlice\"\r\nimport {\r\n\r\n\r\naddCheese ,removeCheese\r\n\r\n\r\n} from \"./features/counter/CheeseSlice\";\r\n\r\n\r\nimport {\r\n\r\n\r\naddMilk ,removeMilk\r\n\r\n\r\n} from \"./features/counter/MilkSlice\";\r\nimport {\r\n\r\n\r\naddSoup ,removeSoup\r\n\r\n\r\n} from \"./features/counter/SoupSlice\";\r\nimport {\r\n\r\n  Link\r\n} from \"react-router-dom\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\n\r\nexport const Checkout = () => {\r\n  const butterCount = useSelector(((state) => state.Butter.value))\r\n  const breadCount = useSelector(((state) => state.Bread.value))\r\n  const cheeseCount = useSelector(((state) => state.Cheese.value))\r\n  const soupCount = useSelector(((state) => state.Soup.value))\r\n    const MilkCount = useSelector(((state) => state.Milk.value))\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const butter=butterCount%2===0?butterCount+butterCount/2:butterCount\r\n    const butterp=butterCount\r\n\r\n    return (\r\n\r\n\r\n        <div class=\"bg-purple-100\">\r\n        <Link to=\"/\" class=\"justify-end\">\r\n        <HomeIcon class=\"w-16 justify-self-center m-auto\"/>\r\n       </Link>\r\n        <span class=\"font-bold text-2xl text-green-500 text-center\"> <p>Total : {butter*120 + breadCount*110 + cheeseCount*90 +MilkCount*50+soupCount*60}</p>\r\n\r\n<p>Grant total after offer:₹{butterCount*120 + breadCount*110 + cheeseCount*90/2 +MilkCount*50+soupCount*60}\r\n        </p>\r\n        </span>\r\n\r\n\r\n      <Cart add={addButter} offer=\"get a third off butter\" remove={removeButter} item=\"butter\"itemCount={butterCount} gift={butter} price={120} imgg=\"../assets/butter.png\"/>\r\n\r\n<Cart add={addBread} remove={removeBread} item=\"bread\" itemCount={breadCount} price={110} imgg=\"../assets/bread.png\" />\r\n<Cart add={addCheese} offer=\"Buy a cheese and get one free\" remove={removeCheese} item=\"cheese\" itemCount={cheeseCount} imgg=\"../assets/Cheddar.png\"price={90}/>\r\n<Cart  add={addSoup} offer=\"When you buy a soup ,You get half price bread\" remove={removeSoup} item=\"soup\" itemCount={soupCount} imgg=\"../assets/soup.png\"price={60}/>\r\n<Cart add={addMilk} remove={removeMilk}item=\"milk\" itemCount={MilkCount} imgg=\"https://img.webmd.com/dtmcms/live/webmd/consumer_assets/site_images/article_thumbnails/reference_guide/living_with_a_milk_allergy_ref_guide/650x350_living_with_a_milk_allergy_ref_guide.jpg?resize=*:350px\" price={50}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport { Counter } from \"./features/counter/Counter\";\nimport \"./App.css\";\nimport {Checkout} from \"./Checkout.js\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nfunction App() {\n  return (\n    <div class=\"bg-purple-100\">\n<Router>\n    <Switch>\n         <Route path=\"/home\">\n\n         </Route>\n         <Route path=\"/checkout\">\n        <Checkout/>\n         </Route>\n         <Route path=\"*\">\n          <Counter />\n         </Route>\n       </Switch>\n\n   </Router>\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport ButterReducer from '../features/counter/counterSlice';\nimport BreadReducer from '../features/counter/BreadSlice';\nimport CheeseReducer from '../features/counter/CheeseSlice';\n\nimport SoupReducer from '../features/counter/SoupSlice';\nimport MilkReducer from '../features/counter/MilkSlice';\n\n\nexport const store = configureStore({\n  reducer: {\n    Butter: ButterReducer,\n\n    Bread:BreadReducer,\n  Soup  :SoupReducer,\n  Cheese:CheeseReducer,\n    Milk:MilkReducer\n\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}